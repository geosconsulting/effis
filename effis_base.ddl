-- Generated by Oracle SQL Developer Data Modeler 17.2.0.188.1059
--   at:        2017-09-05 17:57:15 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE burnt_area (
    burntarea_id   INTEGER NOT NULL,
    country_id     INTEGER,
    countryful     VARCHAR2(100),
    province_id    INTEGER,
    commune_id     INTEGER,
    firedate       DATE,
    areaha         INTEGER,
    broadlea       NUMBER,
    conifer        NUMBER,
    mixed          NUMBER,
    scleroph       NUMBER,
    transit        NUMBER,
    othernatlc     NUMBER,
    agriareas      NUMBER,
    artifsurf      NUMBER,
    otherlc        NUMBER,
    percna2k       NUMBER,
    lastupdate     VARCHAR2(6 CHAR),
    class          VARCHAR2(6 CHAR),
    mic            VARCHAR2(5 CHAR),
    critech        VARCHAR2(3 CHAR),
    shape_area     NUMBER,
    shape_len      NUMBER,
    geom           mdsys.sdo_geometry
);

ALTER TABLE burnt_area ADD CONSTRAINT burnt_area_pk PRIMARY KEY ( burntarea_id );

CREATE TABLE burnt_area_forecast (
    baf_id         INTEGER NOT NULL,
    "date"         DATE,
    fire_id        INTEGER,
    metadata_id    INTEGER,
    shape          mdsys.sdo_geometry,
    time_horizon   TIMESTAMP
);

ALTER TABLE burnt_area_forecast ADD CONSTRAINT burnt_area_forecast_pk PRIMARY KEY ( baf_id );

CREATE TABLE chemical (
    chemical_id   INTEGER NOT NULL,
    name          VARCHAR2(255 CHAR)
);

ALTER TABLE chemical ADD CONSTRAINT chemical_pk PRIMARY KEY ( chemical_id );

CREATE TABLE commune (
    commune_id    INTEGER NOT NULL,
    name          VARCHAR2(255 CHAR),
    shape         mdsys.sdo_geometry,
    country_id    INTEGER,
    province_id   INTEGER
);

ALTER TABLE commune ADD CONSTRAINT commune_pk PRIMARY KEY ( commune_id );

CREATE TABLE country (
    country_id   VARCHAR2(2) NOT NULL,
    name         VARCHAR2(255 CHAR),
    geom         mdsys.sdo_geometry
);

ALTER TABLE country ADD CONSTRAINT country_pk PRIMARY KEY ( country_id );

CREATE TABLE emission (
    emission_id   INTEGER NOT NULL,
    "date"        DATE,
    total         FLOAT,
    average       FLOAT,
    peak          FLOAT,
    fire_id       INTEGER,
    chemical_id   INTEGER,
    metadata_id   INTEGER
);

ALTER TABLE emission ADD CONSTRAINT emission_pk PRIMARY KEY ( emission_id );

CREATE TABLE emissionshape (
    emissionshape_id   INTEGER NOT NULL,
    "date"             DATE,
    shape              mdsys.sdo_geometry,
    altitude           NUMBER,
    meta               INTEGER,
    metadata_id        INTEGER,
    emission_id        INTEGER
);

ALTER TABLE emissionshape ADD CONSTRAINT emissionshapes_pk PRIMARY KEY ( emissionshape_id );

CREATE TABLE fire (
    fire_id        INTEGER NOT NULL,
    updated        DATE,
    area           NUMBER,
    detected       DATE,
    meta           INTEGER,
    geom           mdsys.sdo_geometry,
    country_id     unknown 
--  ERROR: Datatype UNKNOWN is not allowed 
    ,
    macroarea_id   INTEGER,
    region_id      INTEGER,
    province_id    INTEGER
);

ALTER TABLE fire ADD CONSTRAINT fire_pk PRIMARY KEY ( fire_id );

CREATE TABLE fireemissionstatistic (
    fes_id    INTEGER NOT NULL,
    fire_id   INTEGER,
    biomass   NUMBER,
    ch4       NUMBER,
    co        NUMBER,
    c02       NUMBER,
    ec        NUMBER,
    nmhc      NUMBER,
    nox       NUMBER,
    oc        NUMBER,
    pm        NUMBER,
    pm10      NUMBER,
    pm25      NUMBER,
    voc       NUMBER
);

ALTER TABLE fireemissionstatistic ADD CONSTRAINT fireemissionstatistic_pk PRIMARY KEY ( fes_id );

CREATE TABLE fireenvdamagestat (
    feds_id                   INTEGER NOT NULL,
    agricultural_area         NUMBER,
    artificial_surface        NUMBER,
    broadleaved_forest        NUMBER,
    coniferous                NUMBER,
    mixed                     NUMBER,
    other_landcover           NUMBER,
    other_natural_landcover   NUMBER,
    percentage_natura2k       NUMBER,
    sclerophyllous            NUMBER,
    transitional              NUMBER,
    burntarea_id              INTEGER
);

ALTER TABLE fireenvdamagestat ADD CONSTRAINT fire_env_damage_stat_pk PRIMARY KEY ( feds_id );

CREATE TABLE firepopdamagestat (
    fpds_id                  INTEGER NOT NULL,
    buffer_size              INTEGER,
    fire_builtup_area        INTEGER,
    fire_forecast            INTEGER,
    fire_pop_avg             INTEGER,
    fire_pop_peak            INTEGER,
    fire_pop_total           INTEGER,
    on_forecast              CHAR(1),
    potential_builtup_area   INTEGER,
    potential_pop_avg        INTEGER,
    potential_pop_peak       INTEGER,
    potential_pop_total      INTEGER,
    burntarea_id             INTEGER
);

ALTER TABLE firepopdamagestat ADD CONSTRAINT fire_pop_damage_stat_pk PRIMARY KEY ( fpds_id );

CREATE TABLE ghost_hotspot (
    ghosthotspot_id   INTEGER NOT NULL,
    "date"            DATE,
    satellite         INTEGER,
    geom              mdsys.sdo_geometry,
    country_id        INTEGER,
    province_id       INTEGER,
    commune_id        INTEGER,
    satellite_id      INTEGER,
    metadata_id       INTEGER
);

ALTER TABLE ghost_hotspot ADD CONSTRAINT ghost_hot_spot_pk PRIMARY KEY ( ghosthotspot_id );

CREATE TABLE grid (
    grid_id   INTEGER NOT NULL,
    name      VARCHAR2(100),
    threed    SMALLINT
);

ALTER TABLE grid ADD CONSTRAINT grid_pk PRIMARY KEY ( grid_id );

CREATE TABLE gridpoint (
    gridpoint_id   INTEGER NOT NULL,
    grid_id        VARCHAR2(100 CHAR),
    point          NUMBER
);

ALTER TABLE gridpoint ADD CONSTRAINT gridpoint_pk PRIMARY KEY ( gridpoint_id );

CREATE TABLE hotspot_cluster (
    hotspotcluster_id   INTEGER NOT NULL,
    country_id          INTEGER,
    region_id           INTEGER,
    province_id         INTEGER,
    "date"              DATE,
    area                NUMBER,
    shape               mdsys.sdo_geometry,
    metadata_id         INTEGER
);

ALTER TABLE hotspot_cluster ADD CONSTRAINT hotspot_cluster_pk PRIMARY KEY ( hotspotcluster_id );

CREATE TABLE hotspots (
    hotspot_id     INTEGER NOT NULL,
    hs_date        DATE,
    hs_time        DATE,
    conf           INTEGER,
    corine         VARCHAR2(50 CHAR),
    class          VARCHAR2(4 CHAR),
    lat            NUMBER,
    lon            NUMBER,
    critech        VARCHAR2(3 CHAR),
    geom           mdsys.sdo_geometry,
    objectid       NUMBER(10),
    country_id     VARCHAR2(2),
    province_id    VARCHAR2(100 CHAR),
    commune_id     VARCHAR2(80 CHAR),
    satellite_id   INTEGER
);

ALTER TABLE hotspots ADD CONSTRAINT hotspots_pk PRIMARY KEY ( hotspot_id );

CREATE TABLE intensity (
    intensity_id   INTEGER NOT NULL,
    burntarea_id   INTEGER,
    "date"         DATE,
    map            SMALLINT,
    total          NUMBER,
    average        NUMBER,
    peak           NUMBER
);

ALTER TABLE intensity ADD CONSTRAINT intensity_pk PRIMARY KEY ( intensity_id );

CREATE TABLE macro_area (
    macroarea_id      INTEGER NOT NULL,
    name              VARCHAR2(255 CHAR),
    organization_id   INTEGER
);

ALTER TABLE macro_area ADD CONSTRAINT macro_area_pk PRIMARY KEY ( macroarea_id );

CREATE TABLE metadata (
    metadata_id      INTEGER NOT NULL,
    ancillary_data   CLOB,
    automatic        CHAR(1),
    "date"           DATE,
    note             CLOB,
    process          CLOB,
    user_metadata    CLOB
);

ALTER TABLE metadata ADD CONSTRAINT metadata_pk PRIMARY KEY ( metadata_id );

CREATE TABLE organization (
    organization_id   INTEGER NOT NULL,
    name              VARCHAR2(50 CHAR),
    eu                VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
);

ALTER TABLE organization ADD CONSTRAINT organization_pk PRIMARY KEY ( organization_id );

CREATE TABLE province (
    province_id   VARCHAR2(12 CHAR) NOT NULL,
    name          VARCHAR2(255 CHAR),
    shape         mdsys.sdo_geometry,
    country_id    INTEGER,
    region_id     INTEGER
);

COMMENT ON TABLE province IS
    'NUTS3';

ALTER TABLE province ADD CONSTRAINT province_pk PRIMARY KEY ( province_id );

CREATE TABLE region (
    region_id    VARCHAR2(12 CHAR) NOT NULL,
    name         VARCHAR2(255 CHAR),
    shape        mdsys.sdo_geometry,
    state_id     INTEGER,
    country_id   INTEGER
);

COMMENT ON TABLE region IS
    'NUTS2';

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY ( region_id );

CREATE TABLE report (
    report_id   INTEGER NOT NULL,
    data        CLOB,
    "date"      DATE,
    filepath    VARCHAR2(255),
    revision    INTEGER,
    fire_id     INTEGER
);

ALTER TABLE report ADD CONSTRAINT report_pk PRIMARY KEY ( report_id );

CREATE TABLE satellite (
    satellite_id   INTEGER NOT NULL,
    type           VARCHAR2(25 CHAR)
);

ALTER TABLE satellite ADD CONSTRAINT satellite_pk PRIMARY KEY ( satellite_id );

CREATE TABLE state (
    state_id   INTEGER NOT NULL,
    name       VARCHAR2(255 CHAR),
    shape      mdsys.sdo_geometry
);

COMMENT ON TABLE state IS
    'NUTS1';

ALTER TABLE state ADD CONSTRAINT state_pk PRIMARY KEY ( state_id );

CREATE TABLE temperature (
    temp_id   INTEGER NOT NULL,
    name      VARCHAR2(100),
    grid_id   INTEGER,
    "date"    DATE
);

ALTER TABLE temperature ADD CONSTRAINT temperature_pk PRIMARY KEY ( temp_id );

CREATE TABLE wind (
    wind_id   INTEGER NOT NULL,
    name      VARCHAR2(100),
    grid_id   INTEGER,
    "date"    DATE
);

ALTER TABLE wind ADD CONSTRAINT wind_pk PRIMARY KEY ( wind_id );

CREATE TABLE windpoint (
    windpoint_id   INTEGER NOT NULL,
    grid_id        INTEGER,
    gridpoint_id   INTEGER,
    wind           INTEGER,
    x              NUMBER,
    y              NUMBER,
    z              NUMBER
);

ALTER TABLE windpoint ADD CONSTRAINT windpoint_pk PRIMARY KEY ( windpoint_id );

ALTER TABLE burnt_area
    ADD CONSTRAINT burnt_area_commune_fk FOREIGN KEY ( commune_id )
        REFERENCES commune ( commune_id );

ALTER TABLE burnt_area_forecast
    ADD CONSTRAINT burnt_area_forecast_fire_fk FOREIGN KEY ( fire_id )
        REFERENCES fire ( fire_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE burnt_area_forecast
    ADD CONSTRAINT burnt_area_forecast_metadata_fk FOREIGN KEY ( metadata_id )
        REFERENCES metadata ( metadata_id );

ALTER TABLE emission
    ADD CONSTRAINT emission_chemical_fk FOREIGN KEY ( chemical_id )
        REFERENCES chemical ( chemical_id );

ALTER TABLE emission
    ADD CONSTRAINT emission_fire_fk FOREIGN KEY ( fire_id )
        REFERENCES fire ( fire_id );

ALTER TABLE emission
    ADD CONSTRAINT emission_metadata_fk FOREIGN KEY ( metadata_id )
        REFERENCES metadata ( metadata_id );

ALTER TABLE emissionshape
    ADD CONSTRAINT emissionshape_emission_fk FOREIGN KEY ( emission_id )
        REFERENCES emission ( emission_id );

ALTER TABLE emissionshape
    ADD CONSTRAINT emissionshape_metadata_fk FOREIGN KEY ( metadata_id )
        REFERENCES metadata ( metadata_id );

ALTER TABLE fire
    ADD CONSTRAINT fire_macro_area_fk FOREIGN KEY ( macroarea_id )
        REFERENCES macro_area ( macroarea_id );

ALTER TABLE fireemissionstatistic
    ADD CONSTRAINT fireemissionstatistic_fire_fk FOREIGN KEY ( fire_id )
        REFERENCES fire ( fire_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE fireenvdamagestat
    ADD CONSTRAINT fireenvdamagestat_burnt_area_fk FOREIGN KEY ( burntarea_id )
        REFERENCES burnt_area ( burntarea_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE firepopdamagestat
    ADD CONSTRAINT firepopdamagestat_burnt_area_fk FOREIGN KEY ( burntarea_id )
        REFERENCES burnt_area ( burntarea_id );

ALTER TABLE ghost_hotspot
    ADD CONSTRAINT ghost_hotspot_commune_fk FOREIGN KEY ( commune_id )
        REFERENCES commune ( commune_id );

ALTER TABLE ghost_hotspot
    ADD CONSTRAINT ghost_hotspot_metadata_fk FOREIGN KEY ( metadata_id )
        REFERENCES metadata ( metadata_id );

ALTER TABLE ghost_hotspot
    ADD CONSTRAINT ghost_hotspot_satellite_fk FOREIGN KEY ( satellite_id )
        REFERENCES satellite ( satellite_id );

ALTER TABLE hotspot_cluster
    ADD CONSTRAINT hotspot_cluster_metadata_fk FOREIGN KEY ( metadata_id )
        REFERENCES metadata ( metadata_id );

ALTER TABLE hotspots
    ADD CONSTRAINT hotspots_country_fk FOREIGN KEY ( country_id )
        REFERENCES country ( country_id );

ALTER TABLE hotspots
    ADD CONSTRAINT hotspots_province_fk FOREIGN KEY ( province_id )
        REFERENCES province ( province_id );

ALTER TABLE hotspots
    ADD CONSTRAINT hotspots_satellite_fk FOREIGN KEY ( satellite_id )
        REFERENCES satellite ( satellite_id );

ALTER TABLE intensity
    ADD CONSTRAINT intensity_burnt_area_fk FOREIGN KEY ( burntarea_id )
        REFERENCES burnt_area ( burntarea_id );

ALTER TABLE macro_area
    ADD CONSTRAINT macro_area_organization_fk FOREIGN KEY ( organization_id )
        REFERENCES organization ( organization_id );

ALTER TABLE region
    ADD CONSTRAINT region_state_fk FOREIGN KEY ( state_id )
        REFERENCES state ( state_id );

ALTER TABLE report
    ADD CONSTRAINT report_fire_fk FOREIGN KEY ( fire_id )
        REFERENCES fire ( fire_id );

ALTER TABLE temperature
    ADD CONSTRAINT temperature_grid_fk FOREIGN KEY ( grid_id )
        REFERENCES grid ( grid_id );

ALTER TABLE wind
    ADD CONSTRAINT wind_grid_fk FOREIGN KEY ( grid_id )
        REFERENCES grid ( grid_id );

ALTER TABLE windpoint
    ADD CONSTRAINT windpoint_grid_fk FOREIGN KEY ( grid_id )
        REFERENCES grid ( grid_id );

ALTER TABLE windpoint
    ADD CONSTRAINT windpoint_gridpoint_fk FOREIGN KEY ( gridpoint_id )
        REFERENCES gridpoint ( gridpoint_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            28
-- CREATE INDEX                             0
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   5
-- WARNINGS                                 0
